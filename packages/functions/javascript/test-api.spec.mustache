import chai, { expect } from 'chai'
chai.should()

var apiService = require('../../test-utils');

describe('({{projectName}}) {{serviceModelName}}:', function () {

    before('Prepare for {{serviceModelName}} test specs', async function () {
        await apiService.config(require('../../../../{{deploymentNamePosix}}-meta.json'));
    });
    
    {{#operations}}
    it('Should be rejected with Invalid Security Token (IAM) when calling {{{operationId}}}', async function () {
        var data = { {{#allParams}}{{paramName}}: {{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isInteger}}10{{/isInteger}}{{^isInteger}}{{#isNumber}}1.0{{/isNumber}}{{^isNumber}}{{#isArray}}[]{{/isArray}}{{^isArray}}{{#isBodyParam}}{}{{/isBodyParam}}{{^isBodyParam}}'{{paramName}}'{{/isBodyParam}}{{/isArray}}{{/isNumber}}{{/isInteger}}{{/isBoolean}}{{#hasMore}}, {{/hasMore}}{{/allParams}} }
        const result = await apiService.executeIAM('{{path}}', '{{httpMethod}}', data)
        result.should.be.an('object') && expect(result.errors.message).to.be.equal('The security token included in the request is invalid.')
    });
    {{/operations}}

    after('Cleanup {{serviceModelName}} test specs', function () {});
});
