const path = require('path')
const fs = require('fs')
const opName = 'Simplify::APIGateway'
const simplify = require('simplify-sdk')
const provider = require('simplify-sdk/provider')
var nodeArgs = process.argv.slice(2);
var configInputFile = process.env.API_INPUT || "api-input.json"
if (nodeArgs.length > 1) {
    configInputFile = (nodeArgs[0] == "--input" || nodeArgs[0] == "-i") ? nodeArgs[1] : configInputFile
}
try {
    var config = simplify.getInputConfig(path.join(__dirname, configInputFile))
    const distYamlFile = path.join(__dirname, config.Deployment.Stacks.ApiGateway)
    const bucketKey = config.Bucket.Key
    provider.setConfig(config).then(function() {
        simplify.uploadLocalFile({
            adaptor: provider.getStorage(),
            ...{ bucketKey: bucketKey + '/stacks', inputLocalFile: distYamlFile }
        }).then(function (uploadInfo) {
            var TemplateURL = uploadInfo.Location
            simplify.createOrUpdateStackOnComplete({
                adaptor: provider.getResource(),
                ...{
                    stackName: config.Deployment.Name,
                    stackParameters: {
                        DeploymentStage: 'latest',
                        CognitoUserPoolId: config.CognitoUserPoolId
                    },
                    stackTemplate: TemplateURL
                }
            }).then(function (stackData) {
                fs.writeFileSync(path.join(__dirname, config.OutputFile), JSON.stringify(stackData, null, 4));
            }, function (err) {
                console.error(`${err}`)
            })
        }, function (err) {
            console.error(`${opName}-UploadDirectory: ${err}`)
        })
    }).catch(function(err) {
        console.error(`${opName}-LoadCredentials-ERROR: ${err}`)
    })
} catch (err) {
    console.error(`${opName}-LoadConfig-ERROR: ${err}`)
}