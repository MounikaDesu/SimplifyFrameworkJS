openapi: 3.0.0
info:
  version: 0.0.1
  title: The pet project with serverless pattern
x-project-name: project-pets
x-deployment-name: project-pets-demo
x-deployment-region: eu-west-1
x-deployment-profile: simplify-eu
x-api-gateway-name: api-gateway-restapi-name
x-api-authorizer-id: eu-west-1_xxxxxxxx # set to Coginito UserPoolId
x-api-rate-limit: 100 # maximun requests per overall setting
x-api-quota-limit: 1000 # maximum requests per quota-unit
x-api-quota-unit: DAY  # can be one of [DAY, WEEK, MONTH]
x-api-burst-limit: 1000 # maximum burst requests
paths:
  '/shopping/pets':
    x-api-service-name: function-for-buy-pets
    x-api-service-template: flatted # default is stacked for API, can be one of [stacked, flatted, python]
    x-api-service-public: true # explicit to expose this entry through API Gateway [required]
    get:
      responses:
        '200':
          description: Success
  '/events/feed-pets':
    x-event-service-schedule: rate(10 days) # or cron(https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)
    x-event-service-public: false # explicit to NOT expose this entry through API Gateway
    x-event-service-name: event-function-for-pets
    x-event-service-template: flatted # default is flatted for EVENT, can be one of [stacked, flatted, python]
    #x-event-service-custom: arn:aws:lambda:eu-west-1:xxxxxxxxxxxx:function:LambdaExternalResource
    #x-event-service-policy: arn:aws:iam::xxxxxxxxxxxx:policy/DynamoDBAccessReadWritePolicy
    x-event-service-key-vault: false # turn on for using SecretManager key vault
    put:
      description: 'Run on event operation, method is not used'
      responses:
        '200':
          description: Success
  '/pets':
    x-api-service-public: true # explicit to expose this entry through API Gateway [required]
    x-api-service-name: function-for-pets
    x-api-service-authorizer: false # if x-api-authorizer-id is set, using Cognito Authorizer, otherwise using Sigv4 IAM
    x-api-service-api-key: false # using API Key with Quota Limit plan if set. Ca be set along with service authorizer
    x-api-service-tag: devel
    get:
      tags:
        - Pets Service Group
      description: 'Get Pets Information'
      operationId: getPets
      parameters:
      - name: cats
        in: query        
        schema:
          type: string
        required: false
      responses:
        '200':
          description: Success
    post:
      x-api-service-name: function-for-pets
      #x-api-service-public: true => if not set, use the same setting with the first entry method
      #x-api-service-authorizer: false => if not set, use the same setting with the first entry method
      #x-api-service-api-key: false => if not set, use the ssame settingame with the first entry method
      tags:
        - Pets Service Group
      description: 'Create Pets Information'
      operationId: createPet
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataObject:
                  type: object
      responses:
        '200':
          description: Success
    put:
      x-api-service-name: function-for-pets
      #x-api-service-public: true => if not set, use the same setting with the first entry method
      #x-api-service-authorizer: false => if not set, use the same setting with the first entry method
      #x-api-service-api-key: false => if not set, use the same setting with the first entry method
      tags:
        - Pets Service Group
      description: 'Update Pets Information'
      operationId: updatePet
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataObject:
                  type: object
      responses:
        '200':
          description: Success
  '/people/pets/{id}':
    x-api-service-public: true # explicit to expose this entry through API Gateway [required]
    x-api-service-authorizer: true # if x-api-authorizer-id is set, using Cognito Authorizer, otherwise using Sigv4 IAM
    x-api-service-api-key: false # using API Key with Quota Limit plan if set. Ca be set along with service authorizer
    x-api-service-name: function-for-people
    x-api-service-model-name: people-pets
    x-api-service-control: true # this mode is valid for Docker/Kubernetes or local running mode. Otherwise not work as expected.
    post:
      x-control-service-timeout: 60000
      x-control-service-duration: 30000
      x-control-service-threshold: 0.1
      tags:
        - Pets Service Group
      description: 'Create Pets Information By Id'
      operationId: linkPetToPerson
      parameters:
      - in: path
        name: id
        required: true
        schema:
            type: string
      - in: query
        name: filter        
        schema:
            type: string    
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                foo:
                  type: string
      responses:
        '200':
          description: Success
  '/people':
    x-api-service-name: function-for-people
    x-api-service-model-name: people
    x-api-service-authorizer: true # if x-api-authorizer-id is set, using Cognito Authorizer, otherwise using Sigv4 IAM
    get:
      tags:
        - People Service Group
      description: 'Get People Information'
      operationId: getPeople
      responses:
        '200':
          description: Success
    put:
      tags:
        - People Service Group
      description: 'Update People Information'
      operationId: putPeople
      responses:
        '200':
          description: Success
    post:
      tags:
        - People Service Group
      description: 'Create People Information By Id'
      operationId: createPeople
      responses:
        '200':
          description: Success
servers:
  - url: /