openapi: 3.0.0
info:
  version: 0.0.1
  title: The pet project with serverless pattern
x-project-name: project-pets
x-deployment-name: project-pets-demo
x-deployment-region: eu-west-1
x-deployment-profile: simplify-eu
x-api-gateway-name: api-gateway-restapi-name
x-api-authorizer-id: eu-west-1_g4zb3L3Iu
#x-api-control-dashboard: false
paths:
  '/event-for-pets':
    x-event-service-key-vault: true
    x-event-service-name: event-service-for-pets
    #x-event-service-custom: arn:aws:lambda:eu-west-1:xxxxxxxxxxxx:function:lambda-custom-resource
    #x-event-service-policy: arn:aws:iam::xxxxxxxxxxxx:policy/External-DynamoDB-Read-IAMPolicy
    x-event-service-schedule: rate(10 minutes)
    x-event-service-path: true
    put:
      description: 'Run on event operation'
      responses:
        '200':
          description: Success
  '/pets':
    x-api-service-path: true
    x-api-service-name: api-service-for-pets
    x-api-service-authorizer: true
    x-api-service-api-key: true
    x-api-service-tag: devel
    get:
      tags:
        - Pets Service Group
      description: 'Get Pets Information'
      operationId: getPets
      parameters:
      - name: cats
        in: query        
        schema:
          type: string
        required: false
      responses:
        '200':
          description: Success
    post:
      tags:
        - Pets Service Group
      description: 'Create Pets Information'
      operationId: createPet
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataObject:
                  type: object
      responses:
        '200':
          description: Success
    put:
      tags:
        - Pets Service Group
      description: 'Update Pets Information'
      operationId: updatePetWithFields
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataObject:
                  type: object
      responses:
        '200':
          description: Success
  '/pets/{id}':
    x-api-service-path: true
    x-api-service-authorizer: true
    x-api-service-api-key: false
    x-api-service-name: api-service-for-pets
    x-api-service-model-name: people-pets
    x-api-service-control: true
    post:
      x-control-service-timeout: 60000
      x-control-service-duration: 30000
      x-control-service-threshold: 0.1
      tags:
        - Pets Service Group
      description: 'Create Pets Information By Id'
      operationId: linkPetToPerson
      parameters:
      - in: path
        name: id
        required: true
        schema:
            type: string
      - in: query
        name: filter        
        schema:
            type: string    
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                foo:
                  type: string
      responses:
        '200':
          description: Success
  '/people':
    x-api-service-name: api-service-for-people
    x-api-service-model-name: people-pets
    get:
      tags:
        - People Service Group
      description: 'Get People Information'
      operationId: getPeople
      responses:
        '200':
          description: Success
    put:
      tags:
        - People Service Group
      description: 'Update People Information'
      operationId: putPeople
      responses:
        '200':
          description: Success
    post:
      tags:
        - People Service Group
      description: 'Create People Information By Id'
      operationId: createPeople
      responses:
        '200':
          description: Success
servers:
  - url: /